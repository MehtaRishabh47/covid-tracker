{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","Api/Api.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/CountryPicker/Country.module.css","components/Chart/Chart.module.css","Images/logo4.png"],"names":["module","exports","Cards","data","confirmed","deaths","recovered","lastUpdate","className","StylesProvider","container","Grid","spaceing","justify","item","component","Card","xs","md","cx","styles","card","infected","CardContent","Typography","color","gutterBottom","start","end","value","separator","duration","Date","toDateString","variant","recoverd","url","fetchData","country","a","changeUrl","axios","get","currentData","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barchart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchCountries","form","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","src","coronalogo","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bd3560c7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"constainer\":\"Cards_constainer__2qg2z\",\"card\":\"Cards_card__3XA-0\",\"infected\":\"Cards_infected__3ktfz\",\"deaths\":\"Cards_deaths__1td_A\",\"recoverd\":\"Cards_recoverd__3mVey\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid, StylesProvider } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport styles from './Cards.module.css';\r\nimport cx from 'classnames';\r\n\r\n\r\n\r\nconst Cards = ({ data: { confirmed, deaths, recovered, lastUpdate } }) => {\r\n    // console.log(data);\r\n    if (!confirmed) {\r\n        return (\"Loading......\")\r\n    }\r\n    return (\r\n        <div className={StylesProvider.container}>\r\n            <Grid container spaceing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <CountUp\r\n                            start={0}\r\n                            end={confirmed.value}\r\n                            separator=\",\"\r\n                            duration={2.0}\r\n                        />\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n\r\n\r\n                {/* -----------------Recovered-------------------------- */}\r\n\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recoverd)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recoverd</Typography>\r\n                        <CountUp\r\n                            start={0}\r\n                            end={recovered.value}\r\n                            separator=\",\"\r\n                            duration={2.0}\r\n                        />\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of Recoveries from COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n\r\n                {/* ------------Deaths----------------------- */}\r\n\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <CountUp\r\n                            start={0}\r\n                            end={deaths.value}\r\n                            separator=\",\"\r\n                            duration={2.0}\r\n                        />\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of Deaths from COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nconst fetchData = async (country) => {\r\n    let changeUrl = url;\r\n    if (country) {\r\n        changeUrl = `${url}/countries/${country}`\r\n    }\r\n\r\n    try {\r\n        const { data } = await axios.get(changeUrl);\r\n\r\n        const currentData = {\r\n            confirmed: data.confirmed,\r\n            recovered: data.recovered,\r\n            deaths: data.deaths,\r\n            lastUpdate: data.lastUpdate\r\n        }\r\n        return currentData;\r\n    }\r\n    catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n// -----------------DAILY DATA CHART------------------\r\n\r\nexport const fetchDailyData = async () => {\r\n\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`);\r\n\r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }));\r\n        return modifiedData;\r\n    }\r\n    catch (error) {\r\n\r\n    }\r\n}\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const { data: { countries } } = await axios.get(`${url}/countries`);\r\n        return countries.map((country) => country.name);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nexport default fetchData;","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../Api/Api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\nimport { rgbToHex } from '@material-ui/core';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n    const [dailyData, setDailyData] = useState({});\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        fetchAPI();\r\n    }, []);\r\n\r\n    const lineChart = (\r\n        dailyData.length\r\n            ? (\r\n                <Line\r\n                    data={{\r\n                        labels: dailyData.map(({ date }) => date),\r\n                        datasets: [{\r\n                            data: dailyData.map(({ confirmed }) => confirmed),\r\n                            label: 'Infected',\r\n                            borderColor: '#3333ff',\r\n                            fill: true,\r\n                        }, {\r\n                            data: dailyData.map(({ deaths }) => deaths),\r\n                            label: 'Deaths',\r\n                            borderColor: 'red',\r\n                            backgroundColor: 'rgb(255,0,0,0.5)',\r\n                            fill: true,\r\n                        }]\r\n                    }}\r\n                />) : null\r\n    );\r\n    console.log(confirmed, recovered, deaths);\r\n    const barchart = (\r\n        confirmed\r\n            ? (\r\n                <Bar\r\n                    data={{\r\n                        labels: ['Infected', 'Recoverd', 'Deaths'],\r\n                        datasets: [{\r\n                            label: 'People',\r\n                            backgroundColor: [\r\n                                'maroon',\r\n                                'green',\r\n                                'black',\r\n                            ],\r\n                            data: [confirmed.value, recovered.value, deaths.value]\r\n                        }]\r\n                    }}\r\n                    options={{\r\n                        legend: { display: false },\r\n                        title: { display: true, text: `Current state in ${country}` }\r\n                    }}\r\n                />\r\n            ) : null\r\n    )\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barchart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, formControl, StylesProvider } from '@material-ui/core';\r\nimport styles from './Country.module.css';\r\nimport { fetchCountries } from '../../Api/Api';\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n    const [fetchedCountries, setFetchCountries] = useState([]);\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setFetchCountries(await fetchCountries());\r\n        }\r\n        fetchAPI();\r\n    }, [setFetchCountries]);\r\n\r\n\r\n    console.log(fetchedCountries);\r\n\r\n    return (\r\n        <div className={styles.form}>\r\n            <h3>Choose Your Country:</h3>\r\n            <formControl className={styles.formControl}>\r\n                <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                    <option value=\"\">Global</option>\r\n                    {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n                </NativeSelect>\r\n            </formControl>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\nimport './App.css';\n// import { Cards, Charts, CountryPicker } from './components';\nimport Cards from './components/Cards/Cards';\nimport Chart from './components/Chart/Chart';\nimport CountryPicker from './components/CountryPicker/CountryPicker';\nimport fetchData from './Api/Api';\nimport coronalogo from './Images/logo4.png';\n// import styles from './App.css';\n// import { StylesProvider } from '@material-ui/core';\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: '',\n  }\n\n  async componentDidMount() {\n    const fetchedData = await fetchData()\n    // console.log(data);\n    this.setState({ data: fetchedData });\n\n  }\n\n  handleCountryChange = async (country) => {\n    const fetchedData = await fetchData(country);\n    this.setState({ data: fetchedData, country: country });\n  }\n\n  render() {\n    const { data, country } = this.state;\n    return (\n\n      <div className='App'>\n        <img src={coronalogo} alt=\"Corona Virus\" />\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Cards data={data} />\n        <Chart data={data} country={country} />\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Country_form__2mcPq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1Dxjv\"};","module.exports = __webpack_public_path__ + \"static/media/logo4.781443a8.png\";"],"sourceRoot":""}